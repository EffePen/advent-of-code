cpy a b     # b = a0
dec b       # b = a0-1
cpy a d     # d = a   -- beginning of the outer loop
cpy 0 a     # a = 0
cpy b c     # c = (a0 -1 - outer loop idx)
inc a       #
dec c       #
jnz c -2    # last 3 steps loop increases a by (a0 -1 - outer loop idx)
dec d       #
jnz d -5    # repeat prev loop a times => a *= (a0 -1 - outer loop idx)
dec b       # b = a0-2
cpy b c     #
cpy c d     #
dec d       #
inc c       #
jnz d -2    # last 5 steps set c as 2*b  => c = 2*(a0-1-loop_cycle)
tgl c       # when a0 = 7 => c = 10,8,6,..., when a0 = 12 => c = 20,18,16,... => toggles all instructions at distance +2x from current idx
cpy -16 c   #
jnz 1 c     # last 2 jump back to line 3 until toggled => 5 loops for a0 = 7, 10 loops a0 = 12
cpy 75 c    # c = 75
jnz 88 d    # toggled => cpy 88 d => d = 88
inc a       #
inc d       # toggled => dec d
jnz d -2    #
inc c       # toggled => dec c
jnz c -5    # last 6 steps increase a by 88 * 75